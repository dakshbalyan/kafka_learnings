/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.example;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class FULL_NAME extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 3730012844350426855L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"FULL_NAME\",\"namespace\":\"com.example\",\"fields\":[{\"name\":\"FIRST_NAME\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"LAST_NAME\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<FULL_NAME> ENCODER =
      new BinaryMessageEncoder<FULL_NAME>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<FULL_NAME> DECODER =
      new BinaryMessageDecoder<FULL_NAME>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<FULL_NAME> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<FULL_NAME> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<FULL_NAME>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this FULL_NAME to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a FULL_NAME from a ByteBuffer. */
  public static FULL_NAME fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.String FIRST_NAME;
   private java.lang.String LAST_NAME;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public FULL_NAME() {}

  /**
   * All-args constructor.
   * @param FIRST_NAME The new value for FIRST_NAME
   * @param LAST_NAME The new value for LAST_NAME
   */
  public FULL_NAME(java.lang.String FIRST_NAME, java.lang.String LAST_NAME) {
    this.FIRST_NAME = FIRST_NAME;
    this.LAST_NAME = LAST_NAME;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return FIRST_NAME;
    case 1: return LAST_NAME;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: FIRST_NAME = (java.lang.String)value$; break;
    case 1: LAST_NAME = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'FIRST_NAME' field.
   * @return The value of the 'FIRST_NAME' field.
   */
  public java.lang.String getFIRSTNAME() {
    return FIRST_NAME;
  }


  /**
   * Gets the value of the 'LAST_NAME' field.
   * @return The value of the 'LAST_NAME' field.
   */
  public java.lang.String getLASTNAME() {
    return LAST_NAME;
  }


  /**
   * Creates a new FULL_NAME RecordBuilder.
   * @return A new FULL_NAME RecordBuilder
   */
  public static com.example.FULL_NAME.Builder newBuilder() {
    return new com.example.FULL_NAME.Builder();
  }

  /**
   * Creates a new FULL_NAME RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new FULL_NAME RecordBuilder
   */
  public static com.example.FULL_NAME.Builder newBuilder(com.example.FULL_NAME.Builder other) {
    return new com.example.FULL_NAME.Builder(other);
  }

  /**
   * Creates a new FULL_NAME RecordBuilder by copying an existing FULL_NAME instance.
   * @param other The existing instance to copy.
   * @return A new FULL_NAME RecordBuilder
   */
  public static com.example.FULL_NAME.Builder newBuilder(com.example.FULL_NAME other) {
    return new com.example.FULL_NAME.Builder(other);
  }

  /**
   * RecordBuilder for FULL_NAME instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<FULL_NAME>
    implements org.apache.avro.data.RecordBuilder<FULL_NAME> {

    private java.lang.String FIRST_NAME;
    private java.lang.String LAST_NAME;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.example.FULL_NAME.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.FIRST_NAME)) {
        this.FIRST_NAME = data().deepCopy(fields()[0].schema(), other.FIRST_NAME);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.LAST_NAME)) {
        this.LAST_NAME = data().deepCopy(fields()[1].schema(), other.LAST_NAME);
        fieldSetFlags()[1] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing FULL_NAME instance
     * @param other The existing instance to copy.
     */
    private Builder(com.example.FULL_NAME other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.FIRST_NAME)) {
        this.FIRST_NAME = data().deepCopy(fields()[0].schema(), other.FIRST_NAME);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.LAST_NAME)) {
        this.LAST_NAME = data().deepCopy(fields()[1].schema(), other.LAST_NAME);
        fieldSetFlags()[1] = true;
      }
    }

    /**
      * Gets the value of the 'FIRST_NAME' field.
      * @return The value.
      */
    public java.lang.String getFIRSTNAME() {
      return FIRST_NAME;
    }

    /**
      * Sets the value of the 'FIRST_NAME' field.
      * @param value The value of 'FIRST_NAME'.
      * @return This builder.
      */
    public com.example.FULL_NAME.Builder setFIRSTNAME(java.lang.String value) {
      validate(fields()[0], value);
      this.FIRST_NAME = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'FIRST_NAME' field has been set.
      * @return True if the 'FIRST_NAME' field has been set, false otherwise.
      */
    public boolean hasFIRSTNAME() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'FIRST_NAME' field.
      * @return This builder.
      */
    public com.example.FULL_NAME.Builder clearFIRSTNAME() {
      FIRST_NAME = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'LAST_NAME' field.
      * @return The value.
      */
    public java.lang.String getLASTNAME() {
      return LAST_NAME;
    }

    /**
      * Sets the value of the 'LAST_NAME' field.
      * @param value The value of 'LAST_NAME'.
      * @return This builder.
      */
    public com.example.FULL_NAME.Builder setLASTNAME(java.lang.String value) {
      validate(fields()[1], value);
      this.LAST_NAME = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'LAST_NAME' field has been set.
      * @return True if the 'LAST_NAME' field has been set, false otherwise.
      */
    public boolean hasLASTNAME() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'LAST_NAME' field.
      * @return This builder.
      */
    public com.example.FULL_NAME.Builder clearLASTNAME() {
      LAST_NAME = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public FULL_NAME build() {
      try {
        FULL_NAME record = new FULL_NAME();
        record.FIRST_NAME = fieldSetFlags()[0] ? this.FIRST_NAME : (java.lang.String) defaultValue(fields()[0]);
        record.LAST_NAME = fieldSetFlags()[1] ? this.LAST_NAME : (java.lang.String) defaultValue(fields()[1]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<FULL_NAME>
    WRITER$ = (org.apache.avro.io.DatumWriter<FULL_NAME>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<FULL_NAME>
    READER$ = (org.apache.avro.io.DatumReader<FULL_NAME>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
